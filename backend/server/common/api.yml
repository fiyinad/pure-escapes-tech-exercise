openapi: 3.0.1
info:
  title: cart-api
  description: Cart API
  version: 1.0.0
servers:
- url: /api/v1
tags:
- name: Products
  description: Simple product endpoints
- name: Specification
  description: The swagger API specification
paths:
  /products:
    get:
      tags:
      - Products
      description: Fetch all products
      responses:
        200:
          description: Returns all products
          content: {}
    post:
      tags:
      - Products
      description: Create a new product
      requestBody:
        description: The schema of a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBody'
        required: true
      responses:
        200:
          description: Returns all products
          content: {}
  /products/{id}:
    get:
      tags:
      - Products
      parameters:
      - name: id
        in: path
        description: The id of the product to retrieve
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return the product with the specified id
          content: {}
        404:
          description: Product not found
          content: {}
  /products/summary:
    post:
      tags:
      - Products
      description: Create summary of products
      requestBody:
        description: The schema of a list of ProductQuantity(s) 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductQuantities'
        required: true
      responses:
        200:
          description: Return the order summaries 
          content: {}
  /spec:
    get:
      tags:
      - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    ProductBody:
      title: Product
      required:
      - name
      - customerPrice
      - cost
      type: object
      properties:
        name:
          type: string
          example: Jam
        customerPrice:
          type: number
          example: 1299
        cost:
          type: number
          example: 1099
    ProductPost:
      title: Product
      required:
      - id
      - name
      - customerPrice
      - cost
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: Jam
        customerPrice:
          type: number
          example: 1299
        cost:
          type: number
          example: 1099
    ProductQuantities:
      title: productsRange
      type: array
      items:
        $ref: '#/components/schemas/ProductQuantity'
    ProductQuantity:
      title: ProductQuantity
      required:
        - product
        - quantity 
      type: object
      properties:
        product: 
          type: object
          $ref: '#/components/schemas/ProductPost'
        quantity:
          type: number
          example: 5
